{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Register.js\",\n  _s = $RefreshSig$();\n// src/Register.js\n// Programming Lab 2: User registration form using backend API\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://127.0.0.1:5000/api'; // Flask backend base URL\n\nconst Register = () => {\n  _s();\n  // Manage form state for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  // Handle input changes and update state\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent page reload\n\n    try {\n      // Send POST request to backend /api/register\n      const response = await fetch(`${API_BASE}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        // Store current user in localStorage\n        const currentUser = {\n          name: formData.username,\n          role: 'User'\n        };\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n\n        // Save to registeredUsers (optional, for local display)\n        const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n        const updatedUsers = [...existingUsers, currentUser];\n        localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n        // Show confirmation\n        alert('Registration successful!');\n\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: ''\n        });\n      } else {\n        alert(`Registration failed: ${result.message}`);\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Failed to connect to the server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"f9N0QEmAPs7qiUPvbYdzrShQg0o=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_BASE","Register","_s","formData","setFormData","username","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","status","currentUser","role","localStorage","setItem","existingUsers","parse","getItem","updatedUsers","alert","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Register.js"],"sourcesContent":["// src/Register.js\n// Programming Lab 2: User registration form using backend API\n\nimport React, { useState } from 'react';\n\nconst API_BASE = 'http://127.0.0.1:5000/api'; // Flask backend base URL\n\nconst Register = () => {\n  // Manage form state for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  // Handle input changes and update state\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent page reload\n\n    try {\n      // Send POST request to backend /api/register\n      const response = await fetch(`${API_BASE}/register`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        // Store current user in localStorage\n        const currentUser = {\n          name: formData.username,\n          role: 'User',\n        };\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n\n        // Save to registeredUsers (optional, for local display)\n        const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n        const updatedUsers = [...existingUsers, currentUser];\n        localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n        // Show confirmation\n        alert('Registration successful!');\n\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n        });\n\n      } else {\n        alert(`Registration failed: ${result.message}`);\n      }\n\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Failed to connect to the server.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Username Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Email Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Password Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Submit Button */}\n        <button className=\"primary-button\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}