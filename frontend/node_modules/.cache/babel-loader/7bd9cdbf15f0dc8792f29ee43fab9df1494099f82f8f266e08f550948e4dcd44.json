{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghan/Desktop/Program lab/used-car-marketplace/frontend/src/EditProfile.js\",\n  _s = $RefreshSig$();\n// Programming Lab 2 - EditProfile.js\n// Connected to backend: updates username in database\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState(null); // Store user ID from localStorage\n\n  // Load user info from localStorage when the component mounts\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    const storedUserId = localStorage.getItem('user_id');\n    if (storedUsername) setUsername(storedUsername);\n    if (storedUserId) setUserId(storedUserId);\n  }, []);\n\n  // Save updated username to backend\n  const handleSave = async () => {\n    if (!userId) {\n      alert('User not logged in.');\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username\n        }) // Only update username\n      });\n      const result = await response.json();\n      if (response.ok) {\n        localStorage.setItem('username', username); // Update localStorage\n        alert('Username updated successfully!');\n      } else {\n        alert(`Update failed: ${result.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Server error while updating profile.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"primary-button\",\n      onClick: handleSave,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfile, \"KEDa26tUSM7baT76nfQMzrn/6T4=\");\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EditProfile","_s","username","setUsername","userId","setUserId","storedUsername","localStorage","getItem","storedUserId","handleSave","alert","response","fetch","method","headers","body","JSON","stringify","result","json","ok","setItem","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/frontend/src/EditProfile.js"],"sourcesContent":["// Programming Lab 2 - EditProfile.js\n// Connected to backend: updates username in database\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\n\nconst EditProfile = () => {\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState(null); // Store user ID from localStorage\n\n  // Load user info from localStorage when the component mounts\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    const storedUserId = localStorage.getItem('user_id');\n    if (storedUsername) setUsername(storedUsername);\n    if (storedUserId) setUserId(storedUserId);\n  }, []);\n\n  // Save updated username to backend\n  const handleSave = async () => {\n    if (!userId) {\n      alert('User not logged in.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),  // Only update username\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('username', username); // Update localStorage\n        alert('Username updated successfully!');\n      } else {\n        alert(`Update failed: ${result.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Server error while updating profile.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Edit Profile</h2>\n\n      <div className=\"form-group\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n\n      <button className=\"primary-button\" onClick={handleSave}>\n        Save Changes\n      </button>\n    </div>\n  );\n};\n\nexport default EditProfile;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}