{"ast":null,"code":"import _objectSpread from\"/Users/zhanghan/Desktop/Program lab/used-car-marketplace/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/Register.js\n// Programming Lab 2: User registration form using backend API\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE='http://127.0.0.1:5000/api';// Flask backend base URL\nconst Register=()=>{// Manage form state for username, email, and password\nconst[formData,setFormData]=useState({username:'',email:'',password:''});// Handle input changes and update state\nconst handleChange=e=>{setFormData(_objectSpread(_objectSpread({},formData),{},{[e.target.name]:e.target.value}));};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();// Prevent page reload\ntry{// Send POST request to backend /api/register\nconst response=await fetch(\"\".concat(API_BASE,\"/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const result=await response.json();if(result.status==='success'){// Store current user in localStorage\nconst currentUser={name:formData.username,role:'User'};localStorage.setItem('currentUser',JSON.stringify(currentUser));// Save to registeredUsers (optional, for local display)\nconst existingUsers=JSON.parse(localStorage.getItem('registeredUsers'))||[];const updatedUsers=[...existingUsers,currentUser];localStorage.setItem('registeredUsers',JSON.stringify(updatedUsers));// Show confirmation\nalert('Registration successful!');// Reset form\nsetFormData({username:'',email:'',password:''});}else{alert(\"Registration failed: \".concat(result.message));}}catch(error){console.error('Registration error:',error);alert('Failed to connect to the server.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-input\",type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-input\",type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-input\",type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{className:\"primary-button\",type:\"submit\",children:\"Register\"})]})]});};export default Register;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","API_BASE","Register","formData","setFormData","username","email","password","handleChange","e","_objectSpread","target","name","value","handleSubmit","preventDefault","response","fetch","concat","method","headers","body","JSON","stringify","result","json","status","currentUser","role","localStorage","setItem","existingUsers","parse","getItem","updatedUsers","alert","message","error","console","className","children","onSubmit","htmlFor","type","id","onChange","required"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/frontend/src/Register.js"],"sourcesContent":["// src/Register.js\n// Programming Lab 2: User registration form using backend API\n\nimport React, { useState } from 'react';\n\nconst API_BASE = 'http://127.0.0.1:5000/api'; // Flask backend base URL\n\nconst Register = () => {\n  // Manage form state for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  // Handle input changes and update state\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent page reload\n\n    try {\n      // Send POST request to backend /api/register\n      const response = await fetch(`${API_BASE}/register`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        // Store current user in localStorage\n        const currentUser = {\n          name: formData.username,\n          role: 'User',\n        };\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n\n        // Save to registeredUsers (optional, for local display)\n        const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n        const updatedUsers = [...existingUsers, currentUser];\n        localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n        // Show confirmation\n        alert('Registration successful!');\n\n        // Reset form\n        setFormData({\n          username: '',\n          email: '',\n          password: '',\n        });\n\n      } else {\n        alert(`Registration failed: ${result.message}`);\n      }\n\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Failed to connect to the server.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Username Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Email Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Password Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Submit Button */}\n        <button className=\"primary-button\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n\n\n\n\n\n\n\n"],"mappings":"sJAAA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,QAAQ,CAAG,2BAA2B,CAAE;AAE9C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACA,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1BL,WAAW,CAAAM,aAAA,CAAAA,aAAA,IACNP,QAAQ,MACX,CAACM,CAAC,CAACE,MAAM,CAACC,IAAI,EAAGH,CAAC,CAACE,MAAM,CAACE,KAAK,EAChC,CAAC,CACJ,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAL,CAAC,EAAK,CAChCA,CAAC,CAACM,cAAc,CAAC,CAAC,CAAE;AAEpB,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIjB,QAAQ,cAAa,CACnDkB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAC/B,CAAC,CAAC,CAEF,KAAM,CAAAqB,MAAM,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAEpC,GAAID,MAAM,CAACE,MAAM,GAAK,SAAS,CAAE,CAC/B;AACA,KAAM,CAAAC,WAAW,CAAG,CAClBf,IAAI,CAAET,QAAQ,CAACE,QAAQ,CACvBuB,IAAI,CAAE,MACR,CAAC,CACDC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAER,IAAI,CAACC,SAAS,CAACI,WAAW,CAAC,CAAC,CAEhE;AACA,KAAM,CAAAI,aAAa,CAAGT,IAAI,CAACU,KAAK,CAACH,YAAY,CAACI,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAI,EAAE,CAC/E,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGH,aAAa,CAAEJ,WAAW,CAAC,CACpDE,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAER,IAAI,CAACC,SAAS,CAACW,YAAY,CAAC,CAAC,CAErE;AACAC,KAAK,CAAC,0BAA0B,CAAC,CAEjC;AACA/B,WAAW,CAAC,CACVC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAEJ,CAAC,IAAM,CACL4B,KAAK,yBAAAjB,MAAA,CAAyBM,MAAM,CAACY,OAAO,CAAE,CAAC,CACjD,CAEF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3CF,KAAK,CAAC,kCAAkC,CAAC,CAC3C,CACF,CAAC,CAED,mBACEnC,KAAA,QAAKuC,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB1C,IAAA,OAAA0C,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxC,KAAA,SAAMyC,QAAQ,CAAE3B,YAAa,CAAA0B,QAAA,eAE3BxC,KAAA,QAAKuC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1C,IAAA,UAAO4C,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC1C1C,IAAA,UACEyC,SAAS,CAAC,YAAY,CACtBI,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,UAAU,CACbhC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEV,QAAQ,CAACE,QAAS,CACzBwC,QAAQ,CAAErC,YAAa,CACvBsC,QAAQ,MACT,CAAC,EACC,CAAC,cAGN9C,KAAA,QAAKuC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1C,IAAA,UAAO4C,OAAO,CAAC,OAAO,CAAAF,QAAA,CAAC,OAAK,CAAO,CAAC,cACpC1C,IAAA,UACEyC,SAAS,CAAC,YAAY,CACtBI,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVhC,IAAI,CAAC,OAAO,CACZC,KAAK,CAAEV,QAAQ,CAACG,KAAM,CACtBuC,QAAQ,CAAErC,YAAa,CACvBsC,QAAQ,MACT,CAAC,EACC,CAAC,cAGN9C,KAAA,QAAKuC,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB1C,IAAA,UAAO4C,OAAO,CAAC,UAAU,CAAAF,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC1C1C,IAAA,UACEyC,SAAS,CAAC,YAAY,CACtBI,IAAI,CAAC,UAAU,CACfC,EAAE,CAAC,UAAU,CACbhC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEV,QAAQ,CAACI,QAAS,CACzBsC,QAAQ,CAAErC,YAAa,CACvBsC,QAAQ,MACT,CAAC,EACC,CAAC,cAGNhD,IAAA,WAAQyC,SAAS,CAAC,gBAAgB,CAACI,IAAI,CAAC,QAAQ,CAAAH,QAAA,CAAC,UAEjD,CAAQ,CAAC,EACL,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAtC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}