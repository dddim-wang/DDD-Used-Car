{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Register.js\",\n  _s = $RefreshSig$();\n// src/Register.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  // Define form data state for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  // Handle input changes and update formData state\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent page reload\n\n    const {\n      username\n    } = formData;\n\n    // Load existing users from localStorage\n    const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n\n    // Prevent duplicate usernames\n    if (existingUsers.some(user => user.name === username)) {\n      alert('Username already exists. Please choose another one.');\n      return;\n    }\n\n    // Create new user object with default role\n    const newUser = {\n      name: username,\n      role: 'User'\n    };\n\n    // Save new user into the array\n    const updatedUsers = [...existingUsers, newUser];\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n    // Optionally set this as current user\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n\n    // Show confirmation message\n    alert('Registration successful!');\n\n    // Clear the form\n    setFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"f9N0QEmAPs7qiUPvbYdzrShQg0o=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","existingUsers","JSON","parse","localStorage","getItem","some","user","alert","newUser","role","updatedUsers","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Register.js"],"sourcesContent":["// src/Register.js\nimport React, { useState } from 'react';\n\nconst Register = () => {\n  // Define form data state for username, email, and password\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n\n  // Handle input changes and update formData state\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent page reload\n\n    const { username } = formData;\n\n    // Load existing users from localStorage\n    const existingUsers = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n\n    // Prevent duplicate usernames\n    if (existingUsers.some((user) => user.name === username)) {\n      alert('Username already exists. Please choose another one.');\n      return;\n    }\n\n    // Create new user object with default role\n    const newUser = {\n      name: username,\n      role: 'User',\n    };\n\n    // Save new user into the array\n    const updatedUsers = [...existingUsers, newUser];\n    localStorage.setItem('registeredUsers', JSON.stringify(updatedUsers));\n\n    // Optionally set this as current user\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n\n    // Show confirmation message\n    alert('Registration successful!');\n\n    // Clear the form\n    setFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Register</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Username Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Email Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            className=\"form-input\"\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Password Field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            className=\"form-input\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        {/* Submit Button */}\n        <button className=\"primary-button\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}