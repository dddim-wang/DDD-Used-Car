{"ast":null,"code":"// Programming Lab 2 - EditProfile.js\n// Connected to backend: updates username in database\nimport React,{useState,useEffect}from'react';import'./style.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EditProfile=()=>{const[username,setUsername]=useState('');const[userId,setUserId]=useState(null);// Store user ID from localStorage\n// Load user info from localStorage when the component mounts\nuseEffect(()=>{const storedUsername=localStorage.getItem('username');const storedUserId=localStorage.getItem('user_id');if(storedUsername)setUsername(storedUsername);if(storedUserId)setUserId(storedUserId);},[]);// Save updated username to backend\nconst handleSave=async()=>{if(!userId){alert('User not logged in.');return;}try{const response=await fetch(\"http://localhost:5000/users/\".concat(userId),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({username})// Only update username\n});const result=await response.json();if(response.ok){localStorage.setItem('username',username);// Update localStorage\nalert('Username updated successfully!');}else{alert(\"Update failed: \".concat(result.message));}}catch(error){console.error('Error:',error);alert('Server error while updating profile.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-input\",value:username,onChange:e=>setUsername(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{className:\"primary-button\",onClick:handleSave,children:\"Save Changes\"})]});};export default EditProfile;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","EditProfile","username","setUsername","userId","setUserId","storedUsername","localStorage","getItem","storedUserId","handleSave","alert","response","fetch","concat","method","headers","body","JSON","stringify","result","json","ok","setItem","message","error","console","className","children","type","value","onChange","e","target","onClick"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/frontend/src/EditProfile.js"],"sourcesContent":["// Programming Lab 2 - EditProfile.js\n// Connected to backend: updates username in database\n\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\n\nconst EditProfile = () => {\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState(null); // Store user ID from localStorage\n\n  // Load user info from localStorage when the component mounts\n  useEffect(() => {\n    const storedUsername = localStorage.getItem('username');\n    const storedUserId = localStorage.getItem('user_id');\n    if (storedUsername) setUsername(storedUsername);\n    if (storedUserId) setUserId(storedUserId);\n  }, []);\n\n  // Save updated username to backend\n  const handleSave = async () => {\n    if (!userId) {\n      alert('User not logged in.');\n      return;\n    }\n\n    try {\n      const response = await fetch(`http://localhost:5000/users/${userId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),  // Only update username\n      });\n\n      const result = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('username', username); // Update localStorage\n        alert('Username updated successfully!');\n      } else {\n        alert(`Update failed: ${result.message}`);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Server error while updating profile.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Edit Profile</h2>\n\n      <div className=\"form-group\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n\n      <button className=\"primary-button\" onClick={handleSave}>\n        Save Changes\n      </button>\n    </div>\n  );\n};\n\nexport default EditProfile;\n\n"],"mappings":"AAAA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErB,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACS,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE5C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,cAAc,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACvD,KAAM,CAAAC,YAAY,CAAGF,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CACpD,GAAIF,cAAc,CAAEH,WAAW,CAACG,cAAc,CAAC,CAC/C,GAAIG,YAAY,CAAEJ,SAAS,CAACI,YAAY,CAAC,CAC3C,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAACN,MAAM,CAAE,CACXO,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CAEA,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,gCAAAC,MAAA,CAAgCV,MAAM,EAAI,CACpEW,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,QAAS,CAAC,CAAI;AACvC,CAAC,CAAC,CAEF,KAAM,CAAAkB,MAAM,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAEpC,GAAIT,QAAQ,CAACU,EAAE,CAAE,CACff,YAAY,CAACgB,OAAO,CAAC,UAAU,CAAErB,QAAQ,CAAC,CAAE;AAC5CS,KAAK,CAAC,gCAAgC,CAAC,CACzC,CAAC,IAAM,CACLA,KAAK,mBAAAG,MAAA,CAAmBM,MAAM,CAACI,OAAO,CAAE,CAAC,CAC3C,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAC9Bd,KAAK,CAAC,sCAAsC,CAAC,CAC/C,CACF,CAAC,CAED,mBACEX,KAAA,QAAK2B,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxB9B,IAAA,OAAA8B,QAAA,CAAI,cAAY,CAAI,CAAC,cAErB5B,KAAA,QAAK2B,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzB9B,IAAA,UAAA8B,QAAA,CAAO,UAAQ,CAAO,CAAC,cACvB9B,IAAA,UACE+B,IAAI,CAAC,MAAM,CACXF,SAAS,CAAC,YAAY,CACtBG,KAAK,CAAE5B,QAAS,CAChB6B,QAAQ,CAAGC,CAAC,EAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC9C,CAAC,EACC,CAAC,cAENhC,IAAA,WAAQ6B,SAAS,CAAC,gBAAgB,CAACO,OAAO,CAAExB,UAAW,CAAAkB,QAAA,CAAC,cAExD,CAAQ,CAAC,EACN,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}