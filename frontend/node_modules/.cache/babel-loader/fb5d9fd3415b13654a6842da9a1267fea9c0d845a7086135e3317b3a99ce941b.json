{"ast":null,"code":"var _jsxFileName = \"/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Login.js\",\n  _s = $RefreshSig$();\n// === Lab 2 & Lab 3 ===\n// src/Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000'; // Backend API base URL\n\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [role, setRole] = useState('User');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Handle login form submission\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Client-side check for admin password (for demo purposes only)\n    if (username === 'admin' && password !== 'admin123') {\n      alert('Incorrect password for admin!');\n      return;\n    }\n    try {\n      // Send login request to backend with username, role, and password\n      const response = await fetch(`${API_BASE}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          role,\n          password\n        }) // ✅ Added password\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        const currentUser = result.user;\n\n        // ✅ Save user info to localStorage for later use\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n        localStorage.setItem('user_id', currentUser.id); // ✅ Save user ID\n        localStorage.setItem('username', currentUser.username); // ✅ Save username\n\n        // Optional: Store in registeredUsers if not already there\n        const users = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n        const exists = users.some(user => user.name === username);\n        if (!exists) {\n          const newUser = {\n            ...currentUser,\n            id: Date.now().toString() + '-' + Math.random().toString(36).substring(2, 6)\n          };\n          users.push(newUser);\n          localStorage.setItem('registeredUsers', JSON.stringify(users));\n        }\n\n        // Redirect based on role\n        if (role === 'Admin') {\n          navigate('/admin');\n        } else {\n          navigate('/submit');\n        }\n      } else {\n        alert('Login failed: ' + result.message);\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Unable to connect to server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), username === 'admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-input\",\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-input\",\n          id: \"role\",\n          value: role,\n          onChange: e => setRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"User\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"9PI0ejNli5UutVPOPX2CP+sjaog=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","API_BASE","Login","_s","username","setUsername","role","setRole","password","setPassword","navigate","handleLogin","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","result","json","status","currentUser","user","localStorage","setItem","id","users","parse","getItem","exists","some","name","newUser","Date","now","toString","Math","random","substring","push","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/zhanghan/Desktop/Program lab/used-car-marketplace/src/Login.js"],"sourcesContent":["// === Lab 2 & Lab 3 ===\n// src/Login.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst API_BASE = 'http://localhost:5000'; // Backend API base URL\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [role, setRole] = useState('User');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Handle login form submission\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Client-side check for admin password (for demo purposes only)\n    if (username === 'admin' && password !== 'admin123') {\n      alert('Incorrect password for admin!');\n      return;\n    }\n\n    try {\n      // Send login request to backend with username, role, and password\n      const response = await fetch(`${API_BASE}/login`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, role, password }), // ✅ Added password\n      });\n\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        const currentUser = result.user;\n\n        // ✅ Save user info to localStorage for later use\n        localStorage.setItem('currentUser', JSON.stringify(currentUser));\n        localStorage.setItem('user_id', currentUser.id);        // ✅ Save user ID\n        localStorage.setItem('username', currentUser.username); // ✅ Save username\n\n        // Optional: Store in registeredUsers if not already there\n        const users = JSON.parse(localStorage.getItem('registeredUsers')) || [];\n        const exists = users.some(user => user.name === username);\n\n        if (!exists) {\n          const newUser = {\n            ...currentUser,\n            id: Date.now().toString() + '-' + Math.random().toString(36).substring(2, 6),\n          };\n          users.push(newUser);\n          localStorage.setItem('registeredUsers', JSON.stringify(users));\n        }\n\n        // Redirect based on role\n        if (role === 'Admin') {\n          navigate('/admin');\n        } else {\n          navigate('/submit');\n        }\n\n      } else {\n        alert('Login failed: ' + result.message);\n      }\n\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Unable to connect to server.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n\n        {/* Username input */}\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            id=\"username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n\n        {/* Password input for admin only */}\n        {username === 'admin' && (\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              className=\"form-input\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n        )}\n\n        {/* Role selection */}\n        <div className=\"form-group\">\n          <label htmlFor=\"role\">Role:</label>\n          <select\n            className=\"form-input\"\n            id=\"role\"\n            value={role}\n            onChange={(e) => setRole(e.target.value)}\n          >\n            <option value=\"User\">User</option>\n            <option value=\"Admin\">Admin</option>\n          </select>\n        </div>\n\n        <button className=\"primary-button\" type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}